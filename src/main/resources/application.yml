
spring:
  #profile 설정
  profiles:
    active: ${server.profile:local}

logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    root: info
    com.juno.appling: info

server:
  port: 8000

# echo 'spring-boot-security-jwt-juno-spring-boot-security-jwt-juno-appling' | base64
jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LWp1bm8tc3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LWp1bm8tYXBwbGluZwo=
--- #local
logging:
  pattern:
    console: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
  level:
    root: info
    com.juno.appling: debug

spring:
  config:
    activate:
      on-profile: local
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop  #절대 수정 금지
    show-sql: true
  datasource:
    hikari:
      driver-class-name: org.h2.Driver
      jdbc-url: jdbc:h2:mem:appling
      username: sa
      password:

--- #dev
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    hibernate:
      ddl-auto: update  #절대 수정 금지
    show-sql: true
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: ${db.url:jdbc:mysql://localhost/appling}
      username: ${db.username:juno}
      password: ${db.password:password}
  redis:
    host: redis
    port: 6379

--- #prod
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: update  #절대 수정 금지
    show-sql: true
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: ${db.url:jdbc:mysql://localhost/appling}
      username: ${db.username:juno}
      password: ${db.password:password}
  redis:
    host: redis
    port: 6379
